{"version":3,"sources":["app/views/material-kit/forms/SimpleForm.jsx","app/views/forms/BasicForm.jsx"],"names":["SimpleForm","useState","date","Date","state","setState","useEffect","ValidatorForm","addValidationRule","value","console","log","password","removeValidationRule","handleChange","event","persist","target","name","username","firstName","creditCard","mobile","confirmPassword","gender","email","onSubmit","onError","container","spacing","item","lg","md","sm","xs","className","label","onChange","type","validators","errorMessages","utils","DateFnsUtils","margin","id","inputVariant","autoOk","KeyboardButtonProps","row","control","color","labelPlacement","variant","BasicForm","routeSegments","path","Component"],"mappings":"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","file":"static/js/21.79fc453f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from '@material-ui/core'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers'\r\nimport 'date-fns'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\n\r\nconst SimpleForm = () => {\r\n    const [state, setState] = useState({\r\n        date: new Date(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            console.log(value)\r\n\r\n            if (value !== state.password) {\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n        return () => ValidatorForm.removeValidationRule('isPasswordMatch')\r\n    }, [state.password])\r\n\r\n    const handleSubmit = (event) => {\r\n        // console.log(\"submitted\");\r\n        // console.log(event);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        event.persist()\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n        setState({ ...state, date })\r\n    }\r\n\r\n    const {\r\n        username,\r\n        firstName,\r\n        creditCard,\r\n        mobile,\r\n        password,\r\n        confirmPassword,\r\n        gender,\r\n        date,\r\n        email,\r\n    } = state\r\n\r\n    return (\r\n        <div>\r\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n                <Grid container spacing={6}>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Username (Min length 4, Max length 9)\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={username || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength: 4',\r\n                                'maxStringLength: 9',\r\n                            ]}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"First Name\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            value={firstName || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Email\"\r\n                            onChange={handleChange}\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={email || ''}\r\n                            validators={['required', 'isEmail']}\r\n                            errorMessages={[\r\n                                'this field is required',\r\n                                'email is not valid',\r\n                            ]}\r\n                        />\r\n\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                className=\"mb-4 w-full\"\r\n                                margin=\"none\"\r\n                                id=\"mui-pickers-date\"\r\n                                label=\"Date picker\"\r\n                                inputVariant=\"standard\"\r\n                                type=\"text\"\r\n                                autoOk={true}\r\n                                value={date}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <TextValidator\r\n                            className=\"mb-8 w-full\"\r\n                            label=\"Credit Card\"\r\n                            onChange={handleChange}\r\n                            type=\"number\"\r\n                            name=\"creditCard\"\r\n                            value={creditCard || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength:16',\r\n                                'maxStringLength: 16',\r\n                            ]}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Mobile Nubmer\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"mobile\"\r\n                            value={mobile || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Password\"\r\n                            onChange={handleChange}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={password || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Confirm Password\"\r\n                            onChange={handleChange}\r\n                            name=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            value={confirmPassword || ''}\r\n                            validators={['required', 'isPasswordMatch']}\r\n                            errorMessages={[\r\n                                'this field is required',\r\n                                \"password didn't match\",\r\n                            ]}\r\n                        />\r\n                        <RadioGroup\r\n                            className=\"mb-4\"\r\n                            value={gender || ''}\r\n                            name=\"gender\"\r\n                            onChange={handleChange}\r\n                            row\r\n                        >\r\n                            <FormControlLabel\r\n                                value=\"Male\"\r\n                                control={<Radio color=\"secondary\" />}\r\n                                label=\"Male\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"Female\"\r\n                                control={<Radio color=\"secondary\" />}\r\n                                label=\"Female\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"Others\"\r\n                                control={<Radio color=\"secondary\" />}\r\n                                label=\"Others\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                        </RadioGroup>\r\n                        <FormControlLabel\r\n                            control={<Checkbox />}\r\n                            label=\"I have read and agree to the terms of service.\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                    <Icon>send</Icon>\r\n                    <span className=\"pl-2 capitalize\">Submit</span>\r\n                </Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimpleForm\r\n","import React, { Component } from 'react'\r\nimport { Breadcrumb } from 'app/components'\r\nimport SimpleForm from '../material-kit/forms/SimpleForm'\r\nimport { Card } from '@material-ui/core'\r\n\r\nclass BasicForm extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"m-sm-30\">\r\n                <div className=\"mb-sm-30\">\r\n                    <Breadcrumb\r\n                        routeSegments={[\r\n                            { name: 'Forms', path: '/forms' },\r\n                            { name: 'Basic' },\r\n                        ]}\r\n                    />\r\n                </div>\r\n                <Card className=\"px-6 pt-2 pb-4\">\r\n                    <SimpleForm />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BasicForm\r\n"],"sourceRoot":""}