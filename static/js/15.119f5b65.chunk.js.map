{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/icons/FavoriteBorder.js","../node_modules/@material-ui/icons/Favorite.js","../node_modules/@material-ui/icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/icons/CheckBox.js","app/views/material-kit/checkbox/SimpleCheckbox.jsx","app/views/material-kit/checkbox/LabelledCheckbox.jsx","app/views/material-kit/checkbox/PlacingCheckboxLabel.jsx","app/views/material-kit/checkbox/FormGroupCheckbox.jsx","app/views/material-kit/checkbox/AppCheckbox.jsx"],"names":["FormGroup","React","props","ref","classes","className","_props$row","row","other","_objectWithoutProperties","_extends","clsx","root","withStyles","display","flexDirection","flexWrap","name","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_default","createElement","d","SimpleCheckbox","useState","checkedA","checkedB","checkedF","state","setState","handleChange","event","target","checked","Checkbox","onChange","inputProps","color","disabled","indeterminate","defaultChecked","GreenCheckbox","green","LabelledCheckbox","checkedG","FormControlLabel","control","label","icon","checkedIcon","fontSize","PlacingCheckboxLabel","setValue","FormControl","component","FormLabel","aria-label","labelPlacement","useStyles","makeStyles","theme","formControl","margin","spacing","FormGroupCheckbox","gilad","jason","antoine","error","filter","v","length","FormHelperText","required","AppCheckbox","routeSegments","path","title"],"mappings":"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","file":"static/js/15.119f5b65.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\n\nexports.default = _default;","import React from 'react'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nexport default function SimpleCheckbox() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedF: true,\r\n    })\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({ ...state, [name]: event.target.checked })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Checkbox\r\n                checked={state.checkedA}\r\n                onChange={handleChange('checkedA')}\r\n                value=\"checkedA\"\r\n                inputProps={{\r\n                    'aria-label': 'primary checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                checked={state.checkedB}\r\n                onChange={handleChange('checkedB')}\r\n                value=\"checkedB\"\r\n                color=\"primary\"\r\n                inputProps={{\r\n                    'aria-label': 'secondary checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                value=\"checkedC\"\r\n                inputProps={{\r\n                    'aria-label': 'uncontrolled-checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                disabled\r\n                value=\"checkedD\"\r\n                inputProps={{\r\n                    'aria-label': 'disabled checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                disabled\r\n                checked\r\n                value=\"checkedE\"\r\n                inputProps={{\r\n                    'aria-label': 'disabled checked checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                checked={state.checkedF}\r\n                onChange={handleChange('checkedF')}\r\n                value=\"checkedF\"\r\n                indeterminate\r\n                inputProps={{\r\n                    'aria-label': 'indeterminate checkbox',\r\n                }}\r\n            />\r\n            <Checkbox\r\n                defaultChecked\r\n                color=\"default\"\r\n                value=\"checkedG\"\r\n                inputProps={{\r\n                    'aria-label': 'checkbox with default color',\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { green } from '@material-ui/core/colors'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank'\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox'\r\nimport Favorite from '@material-ui/icons/Favorite'\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder'\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n        color: green[400],\r\n        '&$checked': {\r\n            color: green[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />)\r\n\r\nexport default function LabelledCheckbox() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedF: true,\r\n        checkedG: true,\r\n    })\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({ ...state, [name]: event.target.checked })\r\n    }\r\n\r\n    return (\r\n        <FormGroup row>\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={state.checkedA}\r\n                        onChange={handleChange('checkedA')}\r\n                        value=\"checkedA\"\r\n                    />\r\n                }\r\n                label=\"Secondary\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={state.checkedB}\r\n                        onChange={handleChange('checkedB')}\r\n                        value=\"checkedB\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Primary\"\r\n            />\r\n            <FormControlLabel\r\n                control={<Checkbox value=\"checkedC\" />}\r\n                label=\"Uncontrolled\"\r\n            />\r\n            <FormControlLabel\r\n                disabled\r\n                control={<Checkbox value=\"checkedD\" />}\r\n                label=\"Disabled\"\r\n            />\r\n            <FormControlLabel\r\n                disabled\r\n                control={<Checkbox checked value=\"checkedE\" />}\r\n                label=\"Disabled\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={state.checkedF}\r\n                        onChange={handleChange('checkedF')}\r\n                        value=\"checkedF\"\r\n                        indeterminate\r\n                    />\r\n                }\r\n                label=\"Indeterminate\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <GreenCheckbox\r\n                        checked={state.checkedG}\r\n                        onChange={handleChange('checkedG')}\r\n                        value=\"checkedG\"\r\n                    />\r\n                }\r\n                label=\"Custom color\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        icon={<FavoriteBorder />}\r\n                        checkedIcon={<Favorite />}\r\n                        value=\"checkedH\"\r\n                    />\r\n                }\r\n                label=\"Custom icon\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                        checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                        value=\"checkedI\"\r\n                    />\r\n                }\r\n                label=\"Custom size\"\r\n            />\r\n        </FormGroup>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\n\r\nfunction PlacingCheckboxLabel() {\r\n    const [value, setValue] = React.useState('female')\r\n\r\n    function handleChange(event) {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">labelPlacement</FormLabel>\r\n            <FormGroup\r\n                aria-label=\"position\"\r\n                name=\"position\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                row\r\n            >\r\n                <FormControlLabel\r\n                    value=\"top\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Top\"\r\n                    labelPlacement=\"top\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"start\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Start\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"bottom\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Bottom\"\r\n                    labelPlacement=\"bottom\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"End\"\r\n                    labelPlacement=\"end\"\r\n                />\r\n            </FormGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default PlacingCheckboxLabel\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nexport default function FormGroupCheckbox() {\r\n    const classes = useStyles()\r\n    const [state, setState] = React.useState({\r\n        gilad: true,\r\n        jason: false,\r\n        antoine: false,\r\n    })\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({ ...state, [name]: event.target.checked })\r\n    }\r\n\r\n    const { gilad, jason, antoine } = state\r\n    const error = [gilad, jason, antoine].filter((v) => v).length !== 2\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                <FormLabel component=\"legend\">Assign responsibility</FormLabel>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={gilad}\r\n                                onChange={handleChange('gilad')}\r\n                                value=\"gilad\"\r\n                            />\r\n                        }\r\n                        label=\"Gilad Gray\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={jason}\r\n                                onChange={handleChange('jason')}\r\n                                value=\"jason\"\r\n                            />\r\n                        }\r\n                        label=\"Jason Killian\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={antoine}\r\n                                onChange={handleChange('antoine')}\r\n                                value=\"antoine\"\r\n                            />\r\n                        }\r\n                        label=\"Antoine Llorca\"\r\n                    />\r\n                </FormGroup>\r\n                <FormHelperText>Be careful</FormHelperText>\r\n            </FormControl>\r\n            <FormControl\r\n                required\r\n                error={error}\r\n                component=\"fieldset\"\r\n                className={classes.formControl}\r\n            >\r\n                <FormLabel component=\"legend\">Pick two</FormLabel>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={gilad}\r\n                                onChange={handleChange('gilad')}\r\n                                value=\"gilad\"\r\n                            />\r\n                        }\r\n                        label=\"Gilad Gray\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={jason}\r\n                                onChange={handleChange('jason')}\r\n                                value=\"jason\"\r\n                            />\r\n                        }\r\n                        label=\"Jason Killian\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={antoine}\r\n                                onChange={handleChange('antoine')}\r\n                                value=\"antoine\"\r\n                            />\r\n                        }\r\n                        label=\"Antoine Llorca\"\r\n                    />\r\n                </FormGroup>\r\n                <FormHelperText>You can display an error</FormHelperText>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport SimpleCheckbox from './SimpleCheckbox'\r\nimport LabelledCheckbox from './LabelledCheckbox'\r\nimport PlacingCheckboxLabel from './PlacingCheckboxLabel'\r\nimport FormGroupCheckbox from './FormGroupCheckbox'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\n\r\nconst AppCheckbox = () => {\r\n    return (\r\n        <div className=\"m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Chckbox' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"simple checkbox\">\r\n                <SimpleCheckbox />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"Checkbox with Label\">\r\n                <LabelledCheckbox />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"Checkbox with Form Group\">\r\n                <FormGroupCheckbox />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"Checkbox with Different Label Placement\">\r\n                <PlacingCheckboxLabel />\r\n            </SimpleCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppCheckbox\r\n"],"sourceRoot":""}