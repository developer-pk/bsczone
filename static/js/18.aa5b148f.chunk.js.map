{"version":3,"sources":["../node_modules/@material-ui/core/esm/Fab/Fab.js","../node_modules/@material-ui/core/esm/Tooltip/Tooltip.js","app/views/dashboard/shared/Doughnut.jsx","app/views/dashboard/shared/StatCards.jsx","app/views/dashboard/shared/TopSellingTable.jsx","app/views/dashboard/shared/StatCards2.jsx","app/views/dashboard/shared/RowCards.jsx","app/views/dashboard/Analytics.jsx"],"names":["Fab","React","props","ref","children","classes","className","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","concat","capitalize","extended","primary","secondary","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","boxSizing","minHeight","transition","transitions","create","duration","short","borderRadius","padding","minWidth","width","height","boxShadow","shadows","palette","getContrastText","grey","backgroundColor","A100","action","disabledBackground","textDecoration","display","alignItems","justifyContent","contrastText","main","dark","sizeSmall","sizeMedium","name","round","value","Math","hystersisOpen","hystersisTimer","Tooltip","_props$arrow","arrow","_props$disableFocusLi","disableFocusListener","_props$disableHoverLi","disableHoverListener","_props$disableTouchLi","disableTouchListener","_props$enterDelay","enterDelay","_props$enterNextDelay","enterNextDelay","_props$enterTouchDela","enterTouchDelay","idProp","id","_props$interactive","interactive","_props$leaveDelay","leaveDelay","_props$leaveTouchDela","leaveTouchDelay","onClose","onOpen","openProp","open","_props$placement","placement","_props$PopperComponen","PopperComponent","Popper","PopperProps","title","_props$TransitionComp","TransitionComponent","Grow","TransitionProps","useTheme","_React$useState","childNode","setChildNode","_React$useState2","arrowRef","setArrowRef","ignoreNonTouchEvents","closeTimer","enterTimer","leaveTimer","touchTimer","_useControlled","useControlled","controlled","default","state","_useControlled2","_slicedToArray","openState","setOpenState","useId","clearTimeout","current","handleOpen","event","handleEnter","forward","arguments","length","undefined","childrenProps","type","onMouseOver","removeAttribute","persist","setTimeout","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState3","childIsFocusVisible","setChildIsFocusVisible","handleBlur","handleFocus","currentTarget","onFocus","handleClose","shortest","handleLeave","onBlur","onMouseLeave","detectTouchStart","onTouchStart","handleUseRef","useForkRef","handleFocusRef","handleOwnRef","instance","setRef","ReactDOM","handleRef","shouldShowNativeTitle","interactiveWrapperListeners","onTouchEnd","mergedPopperProps","deepmerge","popperOptions","modifiers","enabled","Boolean","element","popper","popperInteractive","popperArrow","anchorEl","_ref","placementInner","TransitionPropsInner","timeout","shorter","tooltip","split","touch","tooltipArrow","zIndex","pointerEvents","top","left","marginTop","marginLeft","marginRight","transformOrigin","bottom","marginBottom","right","alpha","shape","common","white","fontFamily","fontSize","pxToRem","lineHeight","maxWidth","wordWrap","fontWeight","fontWeightMedium","position","margin","overflow","content","transform","fontWeightRegular","tooltipPlacementLeft","_defineProperty","breakpoints","up","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","flip","DoughnutChart","option","legend","show","itemGap","icon","textStyle","text","trigger","formatter","xAxis","axisLine","splitLine","yAxis","series","radius","center","avoidLabelOverlap","hoverOffset","stillShowZeroSum","normal","emphasis","labelLine","data","itemStyle","shadowBlur","shadowOffsetX","shadowColor","style","useStyles","makeStyles","opacity","StatCards","Grid","container","spacing","item","xs","md","Card","elevation","Icon","IconButton","productTable","borderBottom","paddingLeft","StatCards2","projectName","down","Analytics","lg","sm","Doughnut","light"],"mappings":"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","file":"static/js/18.aa5b148f.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minHeight: 36,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      borderRadius: '50%',\n      padding: 0,\n      minWidth: 0,\n      width: 56,\n      height: 56,\n      boxShadow: theme.shadows[6],\n      '&:active': {\n        boxShadow: theme.shadows[12]\n      },\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        },\n        textDecoration: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // assure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    primary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    secondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"extended\"`. */\n    extended: {\n      borderRadius: 48 / 2,\n      padding: '0 16px',\n      width: 'auto',\n      minHeight: 'auto',\n      minWidth: 48,\n      height: 48,\n      '&$sizeSmall': {\n        width: 'auto',\n        padding: '0 8px',\n        borderRadius: 34 / 2,\n        minWidth: 34,\n        height: 34\n      },\n      '&$sizeMedium': {\n        width: 'auto',\n        padding: '0 16px',\n        borderRadius: 40 / 2,\n        minWidth: 40,\n        height: 40\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"``. */\n    sizeSmall: {\n      width: 40,\n      height: 40\n    },\n\n    /* Styles applied to the root element if `size=\"medium\"``. */\n    sizeMedium: {\n      width: 48,\n      height: 48\n    }\n  };\n};\nvar Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'large' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, size !== 'large' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, variant === 'extended' && classes.extended, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   * 'round' is deprecated, use 'circular' instead.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['extended', 'circular', 'round']), function (props) {\n    if (props.variant === 'round') {\n      throw new Error('Material-UI: variant=\"round\" was renamed variant=\"circular\" for consistency.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementAcceptingRef } from '@material-ui/utils';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/unstable_useId';\nimport setRef from '../utils/setRef';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport useTheme from '../styles/useTheme';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nfunction arrowGenerator() {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '0 100%'\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '100% 0'\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '100% 100%'\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '0 0'\n      }\n    }\n  };\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the Popper component. */\n    popper: {\n      zIndex: theme.zIndex.tooltip,\n      pointerEvents: 'none' // disable jss-rtl plugin\n\n    },\n\n    /* Styles applied to the Popper component if `interactive={true}`. */\n    popperInteractive: {\n      pointerEvents: 'auto'\n    },\n\n    /* Styles applied to the Popper component if `arrow={true}`. */\n    popperArrow: arrowGenerator(),\n\n    /* Styles applied to the tooltip (label wrapper) element. */\n    tooltip: {\n      backgroundColor: alpha(theme.palette.grey[700], 0.9),\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.common.white,\n      fontFamily: theme.typography.fontFamily,\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(10),\n      lineHeight: \"\".concat(round(14 / 10), \"em\"),\n      maxWidth: 300,\n      wordWrap: 'break-word',\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */\n    tooltipArrow: {\n      position: 'relative',\n      margin: '0'\n    },\n\n    /* Styles applied to the arrow element. */\n    arrow: {\n      overflow: 'hidden',\n      position: 'absolute',\n      width: '1em',\n      height: '0.71em'\n      /* = width / sqrt(2) = (length of the hypotenuse) */\n      ,\n      boxSizing: 'border-box',\n      color: alpha(theme.palette.grey[700], 0.9),\n      '&::before': {\n        content: '\"\"',\n        margin: 'auto',\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'currentColor',\n        transform: 'rotate(45deg)'\n      }\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n    touch: {\n      padding: '8px 16px',\n      fontSize: theme.typography.pxToRem(14),\n      lineHeight: \"\".concat(round(16 / 14), \"em\"),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n    tooltipPlacementLeft: _defineProperty({\n      transformOrigin: 'right center',\n      margin: '0 24px '\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n    tooltipPlacementRight: _defineProperty({\n      transformOrigin: 'left center',\n      margin: '0 24px'\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n    tooltipPlacementTop: _defineProperty({\n      transformOrigin: 'center bottom',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n    tooltipPlacementBottom: _defineProperty({\n      transformOrigin: 'center top',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    })\n  };\n};\nvar hystersisOpen = false;\nvar hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\nvar Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(props, ref) {\n  var _props$arrow = props.arrow,\n      arrow = _props$arrow === void 0 ? false : _props$arrow,\n      children = props.children,\n      classes = props.classes,\n      _props$disableFocusLi = props.disableFocusListener,\n      disableFocusListener = _props$disableFocusLi === void 0 ? false : _props$disableFocusLi,\n      _props$disableHoverLi = props.disableHoverListener,\n      disableHoverListener = _props$disableHoverLi === void 0 ? false : _props$disableHoverLi,\n      _props$disableTouchLi = props.disableTouchListener,\n      disableTouchListener = _props$disableTouchLi === void 0 ? false : _props$disableTouchLi,\n      _props$enterDelay = props.enterDelay,\n      enterDelay = _props$enterDelay === void 0 ? 100 : _props$enterDelay,\n      _props$enterNextDelay = props.enterNextDelay,\n      enterNextDelay = _props$enterNextDelay === void 0 ? 0 : _props$enterNextDelay,\n      _props$enterTouchDela = props.enterTouchDelay,\n      enterTouchDelay = _props$enterTouchDela === void 0 ? 700 : _props$enterTouchDela,\n      idProp = props.id,\n      _props$interactive = props.interactive,\n      interactive = _props$interactive === void 0 ? false : _props$interactive,\n      _props$leaveDelay = props.leaveDelay,\n      leaveDelay = _props$leaveDelay === void 0 ? 0 : _props$leaveDelay,\n      _props$leaveTouchDela = props.leaveTouchDelay,\n      leaveTouchDelay = _props$leaveTouchDela === void 0 ? 1500 : _props$leaveTouchDela,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottom' : _props$placement,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponent = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      PopperProps = props.PopperProps,\n      title = props.title,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"arrow\", \"children\", \"classes\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"id\", \"interactive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(),\n      childNode = _React$useState[0],\n      setChildNode = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      arrowRef = _React$useState2[0],\n      setArrowRef = _React$useState2[1];\n\n  var ignoreNonTouchEvents = React.useRef(false);\n  var closeTimer = React.useRef();\n  var enterTimer = React.useRef();\n  var leaveTimer = React.useRef();\n  var touchTimer = React.useRef();\n\n  var _useControlled = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      openState = _useControlled2[0],\n      setOpenState = _useControlled2[1];\n\n  var open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var _React$useRef = React.useRef(openProp !== undefined),\n        isControlled = _React$useRef.current; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n\n    React.useEffect(function () {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  var id = useId(idProp);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      clearTimeout(touchTimer.current);\n    };\n  }, []);\n\n  var handleOpen = function handleOpen(event) {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleEnter = function handleEnter() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      var childrenProps = children.props;\n\n      if (event.type === 'mouseover' && childrenProps.onMouseOver && forward) {\n        childrenProps.onMouseOver(event);\n      }\n\n      if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n        return;\n      } // Remove the title ahead of time.\n      // We don't want to wait for the next render commit.\n      // We would risk displaying two tooltips at the same time (native + this one).\n\n\n      if (childNode) {\n        childNode.removeAttribute('title');\n      }\n\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n\n      if (enterDelay || hystersisOpen && enterNextDelay) {\n        event.persist();\n        enterTimer.current = setTimeout(function () {\n          handleOpen(event);\n        }, hystersisOpen ? enterNextDelay : enterDelay);\n      } else {\n        handleOpen(event);\n      }\n    };\n  };\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState3 = React.useState(false),\n      childIsFocusVisible = _React$useState3[0],\n      setChildIsFocusVisible = _React$useState3[1];\n\n  var handleBlur = function handleBlur() {\n    if (childIsFocusVisible) {\n      setChildIsFocusVisible(false);\n      onBlurVisible();\n    }\n  };\n\n  var handleFocus = function handleFocus() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      // Workaround for https://github.com/facebook/react/issues/7769\n      // The autoFocus of React might trigger the event before the componentDidMount.\n      // We need to account for this eventuality.\n      if (!childNode) {\n        setChildNode(event.currentTarget);\n      }\n\n      if (isFocusVisible(event)) {\n        setChildIsFocusVisible(true);\n        handleEnter()(event);\n      }\n\n      var childrenProps = children.props;\n\n      if (childrenProps.onFocus && forward) {\n        childrenProps.onFocus(event);\n      }\n    };\n  };\n\n  var handleClose = function handleClose(event) {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(function () {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(function () {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  };\n\n  var handleLeave = function handleLeave() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      var childrenProps = children.props;\n\n      if (event.type === 'blur') {\n        if (childrenProps.onBlur && forward) {\n          childrenProps.onBlur(event);\n        }\n\n        handleBlur();\n      }\n\n      if (event.type === 'mouseleave' && childrenProps.onMouseLeave && event.currentTarget === childNode) {\n        childrenProps.onMouseLeave(event);\n      }\n\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      event.persist();\n      leaveTimer.current = setTimeout(function () {\n        handleClose(event);\n      }, leaveDelay);\n    };\n  };\n\n  var detectTouchStart = function detectTouchStart(event) {\n    ignoreNonTouchEvents.current = true;\n    var childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  var handleTouchStart = function handleTouchStart(event) {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    clearTimeout(touchTimer.current);\n    event.persist();\n    touchTimer.current = setTimeout(function () {\n      handleEnter()(event);\n    }, enterTouchDelay);\n  };\n\n  var handleTouchEnd = function handleTouchEnd(event) {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(function () {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  var handleUseRef = useForkRef(setChildNode, ref);\n  var handleFocusRef = useForkRef(focusVisibleRef, handleUseRef); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    setRef(handleFocusRef, ReactDOM.findDOMNode(instance));\n  }, [handleFocusRef]);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  } // For accessibility and SEO concerns, we render the title to the DOM node when\n  // the tooltip is hidden. However, we have made a tradeoff when\n  // `disableHoverListener` is set. This title logic is disabled.\n  // It's allowing us to keep the implementation size minimal.\n  // We are open to change the tradeoff.\n\n\n  var shouldShowNativeTitle = !open && !disableHoverListener;\n\n  var childrenProps = _extends({\n    'aria-describedby': open ? id : null,\n    title: shouldShowNativeTitle && typeof title === 'string' ? title : null\n  }, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  });\n\n  var interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = handleEnter();\n    childrenProps.onMouseLeave = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onMouseOver = handleEnter(false);\n      interactiveWrapperListeners.onMouseLeave = handleLeave(false);\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = handleFocus();\n    childrenProps.onBlur = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onFocus = handleFocus(false);\n      interactiveWrapperListeners.onBlur = handleLeave(false);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', \"Remove this title prop `\".concat(children.props.title, \"` or the Tooltip component.\")].join('\\n'));\n    }\n  }\n\n  var mergedPopperProps = React.useMemo(function () {\n    return deepmerge({\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      }\n    }, PopperProps);\n  }, [arrowRef, PopperProps]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/React.createElement(PopperComponent, _extends({\n    className: clsx(classes.popper, interactive && classes.popperInteractive, arrow && classes.popperArrow),\n    placement: placement,\n    anchorEl: childNode,\n    open: childNode ? open : false,\n    id: childrenProps['aria-describedby'],\n    transition: true\n  }, interactiveWrapperListeners, mergedPopperProps), function (_ref) {\n    var placementInner = _ref.placement,\n        TransitionPropsInner = _ref.TransitionProps;\n    return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n      timeout: theme.transitions.duration.shorter\n    }, TransitionPropsInner, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: clsx(classes.tooltip, classes[\"tooltipPlacement\".concat(capitalize(placementInner.split('-')[0]))], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)\n    }, title, arrow ? /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.arrow,\n      ref: setArrowRef\n    }) : null));\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Makes a tooltip interactive, i.e. will not close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   */\n  interactive: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  flip: false\n})(Tooltip);","import React from 'react'\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport { useTheme } from '@material-ui/styles'\r\n\r\nconst DoughnutChart = ({ height, color = [] }) => {\r\n    const theme = useTheme()\r\n\r\n    const option = {\r\n        legend: {\r\n            show: true,\r\n            itemGap: 20,\r\n            icon: 'circle',\r\n            bottom: 0,\r\n            textStyle: {\r\n                color: theme.palette.text.secondary,\r\n                fontSize: 13,\r\n                fontFamily: 'roboto',\r\n            },\r\n        },\r\n        tooltip: {\r\n            show: false,\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b}: {c} ({d}%)',\r\n        },\r\n        xAxis: [\r\n            {\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n            },\r\n        ],\r\n        yAxis: [\r\n            {\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n            },\r\n        ],\r\n\r\n        series: [\r\n            {\r\n                name: 'Traffic Rate',\r\n                type: 'pie',\r\n                radius: ['45%', '72.55%'],\r\n                center: ['50%', '50%'],\r\n                avoidLabelOverlap: false,\r\n                hoverOffset: 5,\r\n                stillShowZeroSum: false,\r\n                label: {\r\n                    normal: {\r\n                        show: false,\r\n                        position: 'center', // shows the description data to center, turn off to show in right side\r\n                        textStyle: {\r\n                            color: theme.palette.text.secondary,\r\n                            fontSize: 13,\r\n                            fontFamily: 'roboto',\r\n                        },\r\n                        formatter: '{a}',\r\n                    },\r\n                    emphasis: {\r\n                        show: true,\r\n                        textStyle: {\r\n                            fontSize: '14',\r\n                            fontWeight: 'normal',\r\n                            // color: \"rgba(15, 21, 77, 1)\"\r\n                        },\r\n                        formatter: '{b} \\n{c} ({d}%)',\r\n                    },\r\n                },\r\n                labelLine: {\r\n                    normal: {\r\n                        show: false,\r\n                    },\r\n                },\r\n                data: [\r\n                    {\r\n                        value: 65,\r\n                        name: 'Google',\r\n                    },\r\n                    {\r\n                        value: 20,\r\n                        name: 'Facebook',\r\n                    },\r\n                    { value: 15, name: 'Others' },\r\n                ],\r\n                itemStyle: {\r\n                    emphasis: {\r\n                        shadowBlur: 10,\r\n                        shadowOffsetX: 0,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    }\r\n\r\n    return (\r\n        <ReactEcharts\r\n            style={{ height: height }}\r\n            option={{\r\n                ...option,\r\n                color: [...color],\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DoughnutChart\r\n","import React from 'react'\r\nimport { Grid, Card, Icon, IconButton, Tooltip } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    icon: {\r\n        fontSize: '44px',\r\n        opacity: 0.6,\r\n        color: palette.primary.main,\r\n    },\r\n}))\r\n\r\nconst StatCards = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Grid container spacing={3} className=\"mb-3\">\r\n            <Grid item xs={12} md={6}>\r\n                <Card\r\n                    className=\"flex flex-wrap justify-between items-center p-sm-24 bg-paper\"\r\n                    elevation={6}\r\n                >\r\n                    <div className=\"flex items-center\">\r\n                        <Icon className={classes.icon}>group</Icon>\r\n                        <div className=\"ml-3\">\r\n                            <small className=\"text-muted\">New Alerts</small>\r\n                            <h6 className=\"m-0 mt-1 text-primary font-medium\">\r\n                                3050\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n                    <Tooltip title=\"View Details\" placement=\"top\">\r\n                        <IconButton>\r\n                            <Icon>arrow_right_alt</Icon>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <Card\r\n                    className=\"flex flex-wrap justify-between align-center p-sm-24 bg-paper\"\r\n                    elevation={6}\r\n                >\r\n                    <div className=\"flex items-center\">\r\n                        <Icon className={classes.icon}>attach_money</Icon>\r\n                        <div className=\"ml-3\">\r\n                            <small className=\"text-muted line-height-1\">\r\n                                Total Ads\r\n                            </small>\r\n                            <h6 className=\"m-0 mt-1 text-primary font-medium\">\r\n                                5\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n                    <Tooltip title=\"View Details\" placement=\"top\">\r\n                        <IconButton>\r\n                            <Icon>arrow_right_alt</Icon>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Card>\r\n            </Grid>\r\n            {/* <Grid item xs={12} md={6}>\r\n                <Card\r\n                    className=\"flex flex-wrap justify-between items-center p-sm-24 bg-paper\"\r\n                    elevation={6}\r\n                >\r\n                    <div className=\"flex items-center\">\r\n                        <Icon className={classes.icon}>store</Icon>\r\n                        <div className=\"ml-3\">\r\n                            <small className=\"text-muted\">\r\n                                Inventory Status\r\n                            </small>\r\n                            <h6 className=\"m-0 mt-1 text-primary font-medium\">\r\n                                8.5% Stock Surplus\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n                    <Tooltip title=\"View Details\" placement=\"top\">\r\n                        <IconButton>\r\n                            <Icon>arrow_right_alt</Icon>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <Card\r\n                    className=\"flex flex-wrap justify-between items-center p-sm-24 bg-paper\"\r\n                    elevation={6}\r\n                >\r\n                    <div className=\"flex items-center\">\r\n                        <Icon className={classes.icon}>shopping_cart</Icon>\r\n                        <div className=\"ml-3\">\r\n                            <small className=\"text-muted\">\r\n                                Orders to deliver\r\n                            </small>\r\n                            <h6 className=\"m-0 mt-1 text-primary font-medium\">\r\n                                305 Orders\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n                    <Tooltip title=\"View Details\" placement=\"top\">\r\n                        <IconButton>\r\n                            <Icon>arrow_right_alt</Icon>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Card>\r\n            </Grid> */}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default StatCards\r\n","import React from 'react'\r\nimport {\r\n    Card,\r\n    Icon,\r\n    IconButton,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    Avatar,\r\n    MenuItem,\r\n    Select,\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    productTable: {\r\n        '& small': {\r\n            height: 15,\r\n            width: 50,\r\n            borderRadius: 500,\r\n            boxShadow:\r\n                '0 0 2px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.24)',\r\n        },\r\n        '& td': {\r\n            borderBottom: 'none',\r\n        },\r\n        '& td:first-child': {\r\n            paddingLeft: '16px !important',\r\n        },\r\n    },\r\n}))\r\n\r\nconst TopSellingTable = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Card elevation={3} className=\"pt-5 mb-6\">\r\n            <div className=\"flex justify-between items-center px-6 mb-3\">\r\n                <span className=\"card-title\">top selling products</span>\r\n                <Select size=\"small\" defaultValue=\"this_month\" disableUnderline>\r\n                    <MenuItem value=\"this_month\">This Month</MenuItem>\r\n                    <MenuItem value=\"last_month\">Last Month</MenuItem>\r\n                </Select>\r\n            </div>\r\n            <div className=\"overflow-auto\">\r\n                <Table\r\n                    className={clsx(\r\n                        'whitespace-pre min-w-400',\r\n                        classes.productTable\r\n                    )}\r\n                >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className=\"px-6\" colSpan={4}>\r\n                                Name\r\n                            </TableCell>\r\n                            <TableCell className=\"px-0\" colSpan={2}>\r\n                                Revenue\r\n                            </TableCell>\r\n                            <TableCell className=\"px-0\" colSpan={2}>\r\n                                Stock Status\r\n                            </TableCell>\r\n                            <TableCell className=\"px-0\" colSpan={1}>\r\n                                Action\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {productList.map((product, index) => (\r\n                            <TableRow key={index} hover>\r\n                                <TableCell\r\n                                    className=\"px-0 capitalize\"\r\n                                    colSpan={4}\r\n                                    align=\"left\"\r\n                                >\r\n                                    <div className=\"flex items-center\">\r\n                                        <Avatar src={product.imgUrl} />\r\n                                        <p className=\"m-0 ml-8\">\r\n                                            {product.name}\r\n                                        </p>\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    className=\"px-0 capitalize\"\r\n                                    align=\"left\"\r\n                                    colSpan={2}\r\n                                >\r\n                                    $\r\n                                    {product.price > 999\r\n                                        ? (product.price / 1000).toFixed(1) +\r\n                                          'k'\r\n                                        : product.price}\r\n                                </TableCell>\r\n\r\n                                <TableCell\r\n                                    className=\"px-0\"\r\n                                    align=\"left\"\r\n                                    colSpan={2}\r\n                                >\r\n                                    {product.available ? (\r\n                                        product.available < 20 ? (\r\n                                            <small className=\"border-radius-4 bg-secondary text-white px-2 py-2px\">\r\n                                                {product.available} available\r\n                                            </small>\r\n                                        ) : (\r\n                                            <small className=\"border-radius-4 bg-primary text-white px-2 py-2px\">\r\n                                                in stock\r\n                                            </small>\r\n                                        )\r\n                                    ) : (\r\n                                        <small className=\"border-radius-4 bg-error text-white px-2 py-2px\">\r\n                                            out of stock\r\n                                        </small>\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell className=\"px-0\" colSpan={1}>\r\n                                    <IconButton>\r\n                                        <Icon color=\"primary\">edit</Icon>\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst productList = [\r\n    {\r\n        imgUrl: '/assets/images/products/headphone-2.jpg',\r\n        name: 'earphone',\r\n        price: 100,\r\n        available: 15,\r\n    },\r\n    {\r\n        imgUrl: '/assets/images/products/headphone-3.jpg',\r\n        name: 'earphone',\r\n        price: 1500,\r\n        available: 30,\r\n    },\r\n    {\r\n        imgUrl: '/assets/images/products/iphone-2.jpg',\r\n        name: 'iPhone x',\r\n        price: 1900,\r\n        available: 35,\r\n    },\r\n    {\r\n        imgUrl: '/assets/images/products/iphone-1.jpg',\r\n        name: 'iPhone x',\r\n        price: 100,\r\n        available: 0,\r\n    },\r\n    {\r\n        imgUrl: '/assets/images/products/headphone-3.jpg',\r\n        name: 'Head phone',\r\n        price: 1190,\r\n        available: 5,\r\n    },\r\n]\r\n\r\nexport default TopSellingTable\r\n","import React from 'react'\r\nimport { Grid, Card, Icon, Fab } from '@material-ui/core'\r\n\r\nconst StatCards2 = () => {\r\n    return (\r\n        <Grid container spacing={3} className=\"mb-6\">\r\n            <Grid item xs={12} md={6}>\r\n                <Card elevation={3} className=\"p-4\">\r\n                    <div className=\"flex items-center\">\r\n                        <Fab\r\n                            size=\"medium\"\r\n                            className=\"bg-light-green circle-44 box-shadow-none\"\r\n                        >\r\n                            <Icon className=\"text-green\">trending_up</Icon>\r\n                        </Fab>\r\n                        <h5 className=\"font-medium text-green m-0 ml-3\">\r\n                            Active Users\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"pt-4 flex items-center\">\r\n                        <h2 className=\"m-0 text-muted flex-grow\">10.8k</h2>\r\n                        <div className=\"flex justify-center items-centerml-3 h-16 w-16 rounded bg-green text-white\">\r\n                            <Icon className=\"text-14\">expand_less</Icon>\r\n                        </div>\r\n                        <span className=\"text-13 text-green ml-1\"> (+21%)</span>\r\n                    </div>\r\n                </Card>\r\n            </Grid>\r\n            {/* <Grid item xs={12} md={6}>\r\n                <Card elevation={3} className=\"p-4\">\r\n                    <div className=\"flex items-center\">\r\n                        <Fab\r\n                            size=\"medium\"\r\n                            className=\"bg-light-error circle-44 box-shadow-none overflow-hidden\"\r\n                        >\r\n                            <Icon className=\"text-error\">star_outline</Icon>\r\n                        </Fab>\r\n                        <h5 className=\"font-medium text-error m-0 ml-3\">\r\n                            Transactions\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"pt-4 flex items-center\">\r\n                        <h2 className=\"m-0 text-muted flex-grow\">$2.8M</h2>\r\n                        <div className=\"flex justify-center items-centerml-3 h-16 w-16 rounded bg-error text-white\">\r\n                            <Icon className=\"text-14\">expand_less</Icon>\r\n                        </div>\r\n                        <span className=\"text-13 text-error ml-1\">(+21%)</span>\r\n                    </div>\r\n                </Card>\r\n            </Grid> */}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default StatCards2\r\n","import React, { Fragment } from 'react'\r\nimport { format } from 'date-fns'\r\nimport {\r\n    Grid,\r\n    Card,\r\n    Icon,\r\n    IconButton,\r\n    Checkbox,\r\n    Fab,\r\n    Avatar,\r\n    Hidden,\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    projectName: {\r\n        marginLeft: 24,\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: 4,\r\n        },\r\n    },\r\n}))\r\n\r\nconst RowCards = () => {\r\n    const classes = useStyles()\r\n\r\n    return [1, 2, 3, 4].map((id) => (\r\n        <Fragment key={id}>\r\n            <Card className=\"py-2 px-4 project-card\">\r\n                <Grid container alignItems=\"center\">\r\n                    <Grid item md={5} xs={7}>\r\n                        <div className=\"flex items-center\">\r\n                            <Checkbox />\r\n                            <Hidden smDown>\r\n                                {id % 2 === 1 ? (\r\n                                    <Fab\r\n                                        className=\"ml-4 bg-error box-shadow-none\"\r\n                                        size=\"small\"\r\n                                    >\r\n                                        <Icon>star_outline</Icon>\r\n                                    </Fab>\r\n                                ) : (\r\n                                    <Fab\r\n                                        className=\"ml-4 bg-green box-shadow-none text-white\"\r\n                                        size=\"small\"\r\n                                    >\r\n                                        <Icon>date_range</Icon>\r\n                                    </Fab>\r\n                                )}\r\n                            </Hidden>\r\n                            <span\r\n                                className={clsx(\r\n                                    'font-medium',\r\n                                    classes.projectName\r\n                                )}\r\n                            >\r\n                                Project {id}\r\n                            </span>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} xs={4}>\r\n                        <div className=\"text-muted\">\r\n                            {format(new Date().getTime(), 'MM/dd/yyyy hh:mma')}\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Hidden smDown>\r\n                        <Grid item xs={3}>\r\n                            <div className=\"flex relative face-group\">\r\n                                <Avatar\r\n                                    className=\"avatar\"\r\n                                    src=\"/assets/images/face-4.jpg\"\r\n                                />\r\n                                <Avatar\r\n                                    className=\"avatar\"\r\n                                    src=\"/assets/images/face-4.jpg\"\r\n                                />\r\n                                <Avatar\r\n                                    className=\"avatar\"\r\n                                    src=\"/assets/images/face-4.jpg\"\r\n                                />\r\n                                <Avatar className=\"text-14 avatar\">+3</Avatar>\r\n                            </div>\r\n                        </Grid>\r\n                    </Hidden>\r\n\r\n                    <Grid item xs={1}>\r\n                        <div className=\"flex justify-end\">\r\n                            <IconButton>\r\n                                <Icon>more_vert</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n            <div className=\"py-2\" />\r\n        </Fragment>\r\n    ))\r\n}\r\n\r\nexport default RowCards\r\n","import React, { Fragment } from 'react'\r\nimport { Grid, Card } from '@material-ui/core'\r\nimport DoughnutChart from './shared/Doughnut'\r\nimport StatCards from './shared/StatCards'\r\nimport TopSellingTable from './shared/TopSellingTable'\r\nimport RowCards from './shared/RowCards'\r\nimport StatCards2 from './shared/StatCards2'\r\nimport UpgradeCard from './shared/UpgradeCard'\r\nimport Campaigns from './shared/Campaigns'\r\nimport { useTheme } from '@material-ui/styles'\r\n\r\nconst Analytics = () => {\r\n    const theme = useTheme()\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"analytics m-sm-30 mt-6\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item lg={8} md={8} sm={12} xs={12}>\r\n                        <StatCards />\r\n\r\n                        {/* Top Selling Products */}\r\n                        {/* <TopSellingTable /> */}\r\n\r\n                        <StatCards2 />\r\n\r\n                        {/* <h4 className=\"card-title text-muted mb-4\">\r\n                            Ongoing Projects\r\n                        </h4>\r\n                        <RowCards /> */}\r\n                    </Grid>\r\n\r\n                    <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                        <Card className=\"px-6 py-4 mb-6\">\r\n                            <div className=\"card-title\">Traffic Sources</div>\r\n                            <div className=\"card-subtitle\">Last 30 days</div>\r\n                            <DoughnutChart\r\n                                height=\"300px\"\r\n                                color={[\r\n                                    theme.palette.primary.dark,\r\n                                    theme.palette.primary.main,\r\n                                    theme.palette.primary.light,\r\n                                ]}\r\n                            />\r\n                        </Card>\r\n\r\n                        {/* <UpgradeCard />\r\n\r\n                        <Campaigns /> */}\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Analytics\r\n"],"sourceRoot":""}