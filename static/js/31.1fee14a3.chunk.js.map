{"version":3,"sources":["app/views/admin/industries/EditForm.jsx","app/views/admin/industries/EditIndustry.jsx"],"names":["useStyles","makeStyles","palette","cardHolder","background","card","maxWidth","borderRadius","margin","EditForm","useState","date","Date","state","setState","React","status","setStatus","classes","useEffect","ValidatorForm","addValidationRule","value","console","log","password","removeValidationRule","handleChange","event","persist","target","name","industry_name","Status","onSubmit","user","axios","post","SERVICE_URL","DEFAULT_SERVICE_VERSION","headers","localStorage","getItem","data","onError","Grid","container","spacing","item","lg","md","sm","xs","variant","className","label","onChange","type","validators","errorMessages","FormControl","formControl","InputLabel","id","Select","labelId","MenuItem","Button","color","Icon","EditIndustry","routeSegments","path","Card","Component"],"mappings":"0VAwBMA,EAAYC,aAAW,cAAGC,QAAH,uBAA4B,CACrDC,WAAY,CACRC,WAAY,WAEhBC,KAAM,CACFC,SAAU,IACVC,aAAc,GACdC,OAAQ,YAwFDC,EArFE,WACb,MAA0BC,mBAAS,CAC/BC,KAAM,IAAIC,OADd,mBAAOC,EAAP,KAAcC,EAAd,KAGA,EAA4BC,IAAML,SAAS,IAA3C,mBAAOM,EAAP,KAAeC,EAAf,KACMC,EAAUlB,IAChBmB,qBAAU,WASN,OARAC,gBAAcC,kBAAkB,mBAAmB,SAACC,GAGhD,OAFAC,QAAQC,IAAIF,GAERA,IAAUT,EAAMY,YAKjB,kBAAML,gBAAcM,qBAAqB,sBACjD,CAACb,EAAMY,WAEV,IAUME,EAAe,SAACC,GAClBA,EAAMC,UACNf,EAAS,2BACFD,GADC,kBAEHe,EAAME,OAAOC,KAAOH,EAAME,OAAOR,SAEtCL,EAAUW,EAAME,OAAOR,QAGvBU,EAEAnB,EAFAmB,cAEAnB,EADAoB,OAGJ,OACI,6BACI,kBAAC,gBAAD,CAAeC,SAzBF,SAACN,GAGlB,IAGMO,EAHWC,IAAMC,KAAK,UAAGC,IAAH,YAAkBC,KAA0B,YAAY,CAACR,KAAKlB,EAAMmB,cAAchB,OAAOH,EAAMoB,QAAQ,CAACO,QAAS,CACzI,cAAiB,UAAUC,aAAaC,QAAQ,kBAE7BC,KACvBpB,QAAQC,IAAIW,EAAK,kBAkB0BS,QAAS,kBAAM,OAClD,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACjC,kBAAC,gBAAD,CACAC,QAAQ,WACJC,UAAU,cACVC,MAAM,gBACNC,SAAU7B,EACV8B,KAAK,OACL1B,KAAK,gBACLT,MAAOU,GAAiB,GACxB0B,WAAY,CAAC,YACbC,cAAe,CAAC,4BAEpB,kBAACC,EAAA,EAAD,CAAaP,QAAQ,WAAWC,UAAWpC,EAAQ2C,YAAY,gBAC9D,kBAACC,EAAA,EAAD,CAAYC,GAAG,qCAAf,UACG,kBAACC,EAAA,EAAD,CACAC,QAAQ,oCACRF,GAAG,8BACHzC,MAAON,EACPwC,SAAU7B,EACV4B,MAAM,SACNxB,KAAK,UAEL,kBAACmC,EAAA,EAAD,CAAU5C,MAAM,IACZ,qCAEJ,kBAAC4C,EAAA,EAAD,CAAU5C,MAAM,UAAhB,UACA,kBAAC4C,EAAA,EAAD,CAAU5C,MAAM,YAAhB,gBAKZ,kBAAC6C,EAAA,EAAD,CAAQC,MAAM,UAAUf,QAAQ,YAAYI,KAAK,UAC7C,kBAACY,EAAA,EAAD,aACA,0BAAMf,UAAU,mBAAhB,Y,UC3GdgB,E,4JACF,WACI,OACI,yBAAKhB,UAAU,WACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIiB,cAAe,CACX,CAAExC,KAAM,WAAYyC,KAAM,kBAC1B,CAAEzC,KAAM,YAIpB,kBAAC0C,EAAA,EAAD,CAAMnB,UAAU,kBACZ,kBAAC,EAAD,Y,GAbOoB,aAoBZJ","file":"static/js/31.1fee14a3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n} from '@material-ui/core'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers'\r\nimport 'date-fns'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { SERVICE_URL, DEFAULT_SERVICE_VERSION } from \"../../../constants/utility\"\r\nimport axios from 'axios'\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    cardHolder: {\r\n        background: '#1A2038',\r\n    },\r\n    card: {\r\n        maxWidth: 800,\r\n        borderRadius: 12,\r\n        margin: '1rem',\r\n    },\r\n}))\r\nconst EditForm = () => {\r\n    const [state, setState] = useState({\r\n        date: new Date(),\r\n    })\r\n    const [status, setStatus] = React.useState('');\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            console.log(value)\r\n\r\n            if (value !== state.password) {\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n        return () => ValidatorForm.removeValidationRule('isPasswordMatch')\r\n    }, [state.password])\r\n\r\n    const handleSubmit = (event) => {\r\n        // console.log(\"submitted\");\r\n        // // console.log(event);\r\n        const response = axios.post(`${SERVICE_URL}/${DEFAULT_SERVICE_VERSION}`+'/industry',{name:state.industry_name,status:state.Status},{headers: { \r\n            'Authorization': 'Bearer '+localStorage.getItem('accessToken')\r\n          }})\r\n        const user  = response.data;\r\n        console.log(user,'industry info');\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        event.persist()\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n        setStatus(event.target.value)\r\n    }\r\n    const {\r\n        industry_name,\r\n        Status,\r\n    } = state\r\n\r\n    return (\r\n        <div>\r\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n                <Grid container spacing={6}>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                        <TextValidator\r\n                        variant=\"outlined\"\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Industry Name\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"industry_name\"\r\n                            value={industry_name || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <FormControl variant=\"outlined\" className={classes.formControl+\" mb-4 w-full\"}>\r\n                         <InputLabel id=\"demo-simple-select-outlined-label\">Status</InputLabel>\r\n                            <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={status}\r\n                            onChange={handleChange}\r\n                            label=\"Status\"\r\n                            name=\"Status\"\r\n                            >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"active\">Active</MenuItem>\r\n                            <MenuItem value=\"inactive\">Inactive</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                    <Icon>send</Icon>\r\n                    <span className=\"pl-2 capitalize\">Save</span>\r\n                </Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm\r\n","import React, { Component } from 'react'\r\nimport { Breadcrumb } from 'app/components'\r\nimport EditForm from './EditForm'\r\nimport { Card } from '@material-ui/core'\r\n\r\nclass EditIndustry extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"m-sm-30\">\r\n                <div className=\"mb-sm-30\">\r\n                    <Breadcrumb\r\n                        routeSegments={[\r\n                            { name: 'Industry', path: '/industry/list' },\r\n                            { name: 'Edit' },\r\n                        ]}\r\n                    />\r\n                </div>\r\n                <Card className=\"px-6 pt-2 pb-4\">\r\n                    <EditForm />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditIndustry\r\n"],"sourceRoot":""}