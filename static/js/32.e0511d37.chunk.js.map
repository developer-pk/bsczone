{"version":3,"sources":["app/views/admin/industries/IndustryTable.jsx","app/views/admin/industries/IndustryList.jsx"],"names":["useStyles","makeStyles","theme","button","margin","spacing","input","display","connect","dispatch","React","useState","rowsPerPage","setRowsPerPage","page","setPage","industry","useSelector","state","open","setState","industryId","setIndustry","useEffect","getIndustry","type","classes","handleClose","className","to","Button","variant","color","Icon","Table","TableHead","TableRow","TableCell","TableBody","slice","map","indus","index","key","align","name","status","createdAt","IconButton","onClick","id","TablePagination","rowsPerPageOptions","component","count","length","backIconButtonProps","nextIconButtonProps","onChangePage","event","newPage","onChangeRowsPerPage","target","value","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","console","log","deleteIndustry","autoFocus","IndustryList","routeSegments","path","title"],"mappings":"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","file":"static/js/32.e0511d37.chunk.js","sourcesContent":["import React, { useState, useEffect, Component } from 'react'\r\nimport {\r\n    IconButton,\r\n    Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    Icon,\r\n    TablePagination,\r\n    Button\r\n} from '@material-ui/core'\r\nimport { SERVICE_URL, DEFAULT_SERVICE_VERSION } from \"../../../constants/utility\"\r\nimport axios from 'axios'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Link } from 'react-router-dom'\r\nimport useIndustry from 'app/hooks/admin/industry/useIndustry'\r\nimport history from 'history.js'\r\nimport { connect } from 'react-redux';\r\nimport {getIndustry, deleteIndustry} from 'app/redux/actions/admin/industry/IndustryActions'\r\nimport { useSelector } from 'react-redux'\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}))\r\nconst IndustryTable = ({ dispatch }) => {\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5)\r\n     const [page, setPage] = React.useState(0)\r\n     const [industries, setIndustries] = useState([]);\r\n     const {industry} = useSelector(state=>state);\r\n     const [open,setState] = React.useState(false)\r\n     const [industryId,setIndustry] = React.useState()\r\n\r\n    useEffect(() => {\r\n            const params={type:'GET_INDUSTRY'};\r\n            dispatch(getIndustry(params));\r\n\r\n        }, []);\r\n    const classes = useStyles()\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage)\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value)\r\n        setPage(0)\r\n    }\r\n\r\n    // const handleDelete = indus => {\r\n    //     confirm({ description: `This will permanently delete ${indus.name}.` })\r\n    //       .then(() => dispatch(deleteIndustry(indus.id)))\r\n    //       .catch(() => console.log(\"Deletion cancelled.\"));\r\n    //   };\r\n    \r\n      const  handleClickOpen = (id) => {\r\n        setState(true);\r\n        setIndustry(id);\r\n      };\r\n    \r\n      const  handleClose = () => {\r\n        setState(false);\r\n      };\r\n    \r\n      const handleAgree = () => {\r\n        console.log(\"I agree!\",industryId);\r\n        dispatch(deleteIndustry(industryId));\r\n        handleClose();\r\n        const params={type:'GET_INDUSTRY'};\r\n        dispatch(getIndustry(params));\r\n      };\r\n      const handleDisagree = () => {\r\n        console.log(\"I do not agree.\");\r\n        handleClose();\r\n      };\r\n\r\n    return (\r\n        <div className=\"w-full overflow-auto\">\r\n            <div className=\"w-full overflow-auto\">\r\n            <Link to=\"/industry/add\">\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}><Icon>add</Icon> Add Industry</Button>\r\n            </Link>\r\n            </div>\r\n           \r\n            <Table className=\"whitespace-pre\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className=\"px-0\">Name</TableCell>\r\n                        <TableCell className=\"px-0\">Status</TableCell>\r\n                        <TableCell className=\"px-0\">Created Date</TableCell>\r\n                        <TableCell className=\"px-0\">Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {industry.slice(\r\n                            page * rowsPerPage,\r\n                            page * rowsPerPage + rowsPerPage\r\n                        ).map((indus, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell\r\n                                    className=\"px-0 capitalize\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    {indus.name}\r\n                                </TableCell>\r\n                                <TableCell className=\"px-0 capitalize\">\r\n                                    {indus.status}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    className=\"px-0 capitalize\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    {indus.createdAt}\r\n                                </TableCell>\r\n                                <TableCell className=\"px-0\">\r\n                                    <Link to=\"/industry/edit\">\r\n                                    <IconButton>\r\n                                        <Icon color=\"primary\">edit</Icon>\r\n                                    </IconButton>\r\n                                    </Link>\r\n                                    <IconButton onClick={() => handleClickOpen(indus.id)}>\r\n                                        <Icon color=\"error\">close</Icon>\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                </TableBody>\r\n            </Table>\r\n\r\n            <TablePagination\r\n                className=\"px-4\"\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={industry.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                backIconButtonProps={{\r\n                    'aria-label': 'Previous Page',\r\n                }}\r\n                nextIconButtonProps={{\r\n                    'aria-label': 'Next Page',\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Confirmation\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Are you sure you want to delete it?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDisagree} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleAgree} color=\"primary\" autoFocus>\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        </div>\r\n    )\r\n            \r\n}\r\n\r\nexport default connect()(IndustryTable);\r\n","import React from 'react'\r\nimport IndustryTable from './IndustryTable'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\n\r\nconst IndustryList = () => {\r\n    return (\r\n        <div className=\"m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Industry', path: '/industry/list' },\r\n                        { name: 'List' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"Industry\">\r\n                <IndustryTable />\r\n            </SimpleCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndustryList\r\n"],"sourceRoot":""}